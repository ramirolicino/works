using System;
using System.Collections.Generic;

namespace BibliotecaDeClases
{
    /// <summary>
    /// NO CAMBIAR NADA DE ESTA CLASE
    /// </summary>
    public static class GeneradorDeDatos
    {
        static Random rnd;
        static List<string> nombres;
        static List<string> apellidos;
        static List<string> carreras;


        static GeneradorDeDatos()
        {
            rnd = new Random();
            nombres = new List<string>()
            {
                "Meriel",
                "Gabie",
                "Gage",
                "Bennie",
                "Kellia",
                "Imogene",
                "Dominique",
                "Elena",
                "Kinna",
                "Monty",
                "Ashleigh",
                "Mira",
                "Sheffy",
                "Sibeal",
                "Fabiano",
                "Ethan",
                "Ethelyn",
                "Jarrod",
                "Martguerita",
                "Evelyn",
                "Bram",
                "Corissa",
                "Nessie",
                "Deeann",
                "Isidro",
                "Garret",
                "Zandra",
                "Verla",
                "Linea",
                "Mickie",
                "Benoite",
                "Sammie",
                "Sadie",
                "Chad",
                "Tiff",
                "Reinaldo",
                "Evelyn",
                "Melany",
                "Creighton",
                "Reggis",
                "Flori",
                "Bernardo",
                "Dell",
                "Bendite",
                "Gloria",
                "Beatrice",
                "Parry",
                "Benoite",
                "Alfreda",
                "Ellis",
                "Fulton",
                "Mario",
                "Cleveland",
                "Axel",
                "Mimi",
                "Marcelia",
                "Cleo",
                "Gretel",
                "Odetta",
                "Peadar",
                "Lion",
                "Alameda",
                "De",
                "Corette",
                "Koren",
                "Georgianne",
                "Layney",
                "Lindsey",
                "Tomkin",
                "Dennison",
                "Tootsie",
                "Arnaldo",
                "Currie",
                "Wildon",
                "Uta",
                "Bev",
                "Rorie",
                "Halley",
                "Brien",
                "Lennard",
                "Luce",
                "Kennan",
                "Juanita",
                "Hugh",
                "Amalia",
                "Brianne",
                "Laurella",
                "Corie",
                "Riane",
                "Fraze",
                "Amye",
                "Julie",
                "Angelita",
                "Ethelred",
                "Barris",
                "Rikki",
                "Adrian",
                "Camille",
                "Alayne",
                "Renado"
            };
            apellidos = new List<string>()
            {
               "Bellsham",
                "Blague",
                "Doniso",
                "Piesold",
                "Roma",
                "Stobbe",
                "McLauchlin",
                "Joselin",
                "Blankau",
                "Macilhench",
                "Faulconer",
                "Emberson",
                "Segrave",
                "McQuode",
                "Kilfedder",
                "Imeson",
                "Kindle",
                "Tangye",
                "Caccavella",
                "Wattins",
                "Calderon",
                "Drewe",
                "Rycroft",
                "Ygo",
                "Braniff",
                "Caulfield",
                "Keilloh",
                "Sudlow",
                "Putland",
                "Dunsire",
                "Delgardillo",
                "Eilers",
                "Baxstare",
                "Moreinis",
                "Smickle",
                "Vernazza",
                "Casini",
                "Gatty",
                "Ferraresi",
                "La Batie",
                "Waberer",
                "Kiezler",
                "Menezes",
                "Chastand",
                "Wareing",
                "Sepey",
                "Hazlewood",
                "Arderne",
                "Echallie",
                "Phillipps",
                "Hucks",
                "Batstone",
                "Norvell",
                "Hockey",
                "Beranek",
                "Mannion",
                "Skehan",
                "Thorouggood",
                "Brien",
                "Henriques",
                "Pinsent",
                "Boydon",
                "Hingeley",
                "Cocklie",
                "Lote",
                "Daburn",
                "Rassmann",
                "Billison",
                "Darrach",
                "Trapp",
                "Elms",
                "Goodwin",
                "Grist",
                "Whardley",
                "Haffner",
                "Kaley",
                "Stranger",
                "Fingleton",
                "Keenlayside",
                "Yuryaev",
                "Hartshorne",
                "Parham",
                "Beynkn",
                "Keymer",
                "Hamshar",
                "Flott",
                "Treagust",
                "Durek",
                "Glastonbury",
                "Tumber",
                "Pentercost",
                "Ruggs",
                "Beazley",
                "Holdron",
                "Parncutt",
                "Chenery",
                "Michin",
                "Allom",
                "Kesten",
                "Casemore"
            };
            carreras = new List<string>()
            {
               "Abogacía",
                "Accidentología Vial",
                "Acompañante Terapéutico",
                "Actividad física y deportiva",
                "Actor de Teatro, cine y TV",
                "Actor y Director de Artes Escénicas",
                "Actuación",
                "Actuario",
                "Acuicultura",
                "Administración",
                "Administración de Salud",
                "Artes Electrónicas","Biodiversidad","Bioinformática","Bioingeniería",
                "Administración de Servicios de Salud",
                "Administración Hotelera",
                "Aviación",
                "Bellas Artes",
                "Bibliotecología",
                "Calígrafo público","Ciencia Política","Ciencias Ambientales",
                "Canto",
                "Chef Internacional",
                "Ciencia y Tecnología de los Alimentos",
                "Ciencias de la Computación",
                "Ciencias Veterinarias",
                "Diseño de Animaciones y Dibujos Animados",
                "Diseño Multimedial",
                "Diseño Textil e Indumentaria","Ecología Urbana","Enología y Viticultura","Estadística","Estudios Orientales","Genética",
                "Diseño Web",
                "Diseño y Programación de Simuladores Virtuales",
                "Grafología",
                "Guionista cinematográfico",
                "Guionista Cinematográfico",
                "Guionista de Radio y TV",
                "Hemoterapia",
                "Historia",
                "Humanística y Ceremonial",
                "Iluminación Cinematográfica",
                "Oceanografía",
                "Odontología",
                "Profesorado en Artes Plásticas",
                "Profesorado en Ciencias Económicas",
                "Profesorado en Comunicación Social",
                "Profesorado en Portugués",
                "Programador de Sistemas",
                "Tripulante de Cabina de Pasajeros"
            };
        }

        public static Random Rnd { get => rnd; }

        public static Alumno GetUnAlumno
        {
            get
            {
                decimal dni = rnd.Next(10000000, 45000000);
                string nombreCompleto = $"{apellidos[rnd.Next(0, apellidos.Count)]},{nombres[rnd.Next(0, nombres.Count)]}";
                decimal nota1 = rnd.Next(1, 11);
                decimal nota2 = rnd.Next(1, 11);

                return new Alumno(dni, nombreCompleto, nota1, nota2);
            }
        }

        internal static Carrera GetUnaCarrera
        {
            get
            {
                return new Carrera(carreras[rnd.Next(0, carreras.Count)]);
            }
        }

    }
}
